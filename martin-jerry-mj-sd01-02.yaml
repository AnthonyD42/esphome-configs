# Light dimmer
# https://devices.esphome.io/devices/MJ-SJ01

# GPI Mappings
# GPIO0 - Up button (input, pullup, inverted)
# GPIO1 - Down button (input, pullup, inverted)
# GPIO3 - LED 5 (output, inverted)
# GPIO4 - Status LED Red (output, inverted)
# GPIO5 - LED 4 (output, inverted)
# GPIO12 - LED 3 (output, inverted)
# GPIO13 - PWM output to dimmer (output, esp8266_pwm)
# GPIO14 - LED 2 (output, inverted)
# GPIO15 - Main button (input, pullup)
# GPIO16 - Relay control (output, inverted)

# https://esphome.io/guides/configuration-types.html#substitutions
substitutions:
  project: Using MJ-SD01 Dimmer 02 to control iFan03
  location: Office
  device_name: mj_sd01_dimmer_02 # hostname & entity_id
  friendly_name: MJ-SD01 Dimmer 02 # Displayed in HA frontend

esphome:
  # https://esphome.io/components/esphome
  name: ${device_name}
  name_add_mac_suffix: false
  friendly_name: ${friendly_name}
  on_boot:
    priority: -10
    then:
      - if:
          condition:
            lambda: 'return id(ifan_light_on).state;'
          then:
            - light.turn_on: led_main_light
          else:
            - light.turn_off: led_main_light
      - if:
          condition:
            # lambda: 'return id(ifan_fan_speed).state == "low";' 
            lambda: 'return id(ifan_fan_speed).state == 1.0;' 
          then:
            - light.turn_on: led_1_light
      - if:
          condition:
            # lambda: 'return id(ifan_fan_speed).state == "medium";'
            lambda: 'return id(ifan_fan_speed).state == 2.0;'
          then:
            - light.turn_on:
                id: led_1_light
            - light.turn_on:
                id: led_2_light
            - light.turn_on:
                id: led_3_light
      - if:
          condition:
            # lambda: 'return id(ifan_fan_speed).state == "high";'
            lambda: 'return id(ifan_fan_speed).state == 1.0;'
          then:
            - light.turn_on:
                id: led_1_light
            - light.turn_on:
                id: led_2_light
            - light.turn_on:
                id: led_3_light
            - light.turn_on:
                id: led_4_light
            - light.turn_on:
                id: led_5_light

# https://esphome.io/components/esp8266.html  
esp8266:
  board: esp01_1m

# https://esphome.io/components/api
api:
  encryption:
    key: !secret api_encryption_key

# https://esphome.io/components/ota
ota:
  - platform: esphome
    password: !secret ota_password

# https://esphome.io/components/wifi
wifi:  
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
  ap:
    ssid: ${friendly_name} AP
    password: !secret ap_password

captive_portal:

# https://esphome.io/components/web_server.html
web_server:
  # port: 80
  # Can cause high memory usage on ESP8266, enable as needed

# https://esphome.io/components/logger
logger:

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s
  - platform: homeassistant
    name: "iFan Light State"
    entity_id: light.sonoff_ifan03_01_light
    id: ifan_light_state
  - platform: homeassistant
    name: "iFan Fan Speed"
    entity_id: fan.sonoff_ifan03_01_fan
    id: ifan_fan_speed

binary_sensor:
  # Main button (toggle light or long-press to toggle relay)
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    id: main_button_raw

# Template sensor to detect long press (â‰¥5s)
  - platform: template
    name: "Main Button Long Press"
    id: main_button_long
    lambda: |-
      return id(main_button_raw).state;
    filters:
      - delayed_on: 5s
    on_press:
      then:
        - switch.toggle: relay_power

# Regular short press (instant)
  - platform: template
    name: "Main Button Short Press"
    id: main_button_short
    lambda: |-
      return id(main_button_raw).state;
    filters:
      - invert:
      - delayed_off: 100ms  # debounce
    on_press:
      then:
        - script.execute: toggle_light

  # Up button (fan speed up)
  - platform: gpio
    pin:
      number: GPIO9
      mode: INPUT_PULLUP
      inverted: true
    name: "Fan Speed Up"
    on_press:
      then:
        - homeassistant.service:
            service: fan.increase_speed
            data:
              entity_id: fan.sonoff_ifan03_01_fan

  # Down button (fan speed down)
  - platform: gpio
    pin:
      number: GPIO10
      mode: INPUT_PULLUP
      inverted: true
    name: "Fan Speed Down"
    on_press:
      then:
        - homeassistant.service:
            service: fan.decrease_speed
            data:
              entity_id: fan.sonoff_ifan03_01_fan
  
  - platform: homeassistant
    name: "iFan Light On"
    entity_id: light.sonoff_ifan03_01_light
    id: ifan_light_on
    on_press:
      then:
        - light.turn_on: led_main_light
    on_release:
      then:
        - light.turn_off: led_main_light

light:
  - platform: binary
    name: "LED Main"
    output: led_main
    id: led_main_light
  - platform: binary
    name: "LED 1"
    output: led_1
    id: led_1_light
  - platform: binary
    name: "LED 2"
    output: led_2
    id: led_2_light
  - platform: binary
    name: "LED 3"
    output: led_3
    id: led_3_light
  - platform: binary
    name: "LED 4"
    output: led_4
    id: led_4_light
  - platform: binary
    name: "LED 5"
    output: led_5
    id: led_5_light

# Relay to control power to iFan04
switch:
  - platform: gpio
    name: "Relay"
    pin: GPIO16
    id: relay_power
    inverted: true
    restore_mode: RESTORE_DEFAULT_ON  # Optional: keep iFan04 powered on by default

# https://esphome.io/components/output/gpio.html
output:
  - platform: gpio
    id: led_main
    pin: GPIO4  # Main LED
  - platform: gpio
    id: led_1
    pin: GPIO13 # LED 1 (PWM output to dimmer)
  - platform: gpio
    id: led_2
    pin: GPIO14 # LED 2
    inverted: true
  - platform: gpio
    id: led_3
    pin: GPIO12 # LED 3
    inverted: true
  - platform: gpio
    id: led_4
    pin: GPIO5 # LED 4
    inverted: true
  - platform: gpio
    id: led_5
    pin: GPIO3 # LED 5
    inverted: true

# Script to toggle light
script:
  - id: toggle_light
    then:
      - homeassistant.service:
          service: light.toggle
          data:
            entity_id: light.sonoff_ifan03_01_light
