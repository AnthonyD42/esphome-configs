# https://devices.esphome.io/devices/Shelly-1

#Landing Lights Lvl 2
substitutions:
  device_name: shelly_1_02
  friendly_name: Shelly 1 02

esphome:
  name: ${device_name}
  name_add_mac_suffix: false
  friendly_name: ${friendly_name}

esp8266:
  board: esp01_1m

# To be able to get logs from the device via serial and api.
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

# Enable over the air update with password
ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${friendly_name} AP
    password: !secret ap_password

# Sets up the improv via serial client for Wi-Fi provisioning
improv_serial:
# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:

web_server:

# Device Specific Config
output:
  - platform: gpio
    pin: GPIO4
    id: relay_1

light:
  - platform: binary
    name: "Light"
    output: relay_1
    id: light_1
    on_turn_on: #blue when on
      - homeassistant.service:
          service: homeassistant.turn_on
          data:
            entity_id: switch.mj_s01_switch_03_blue_led
      - homeassistant.service:
          service: homeassistant.turn_off
          data:
            entity_id: switch.mj_s01_switch_03_red_led
    on_turn_off: #red when off
      - homeassistant.service:
          service: homeassistant.turn_off
          data:
            entity_id: switch.mj_s01_switch_03_blue_led
      - homeassistant.service:
          service: homeassistant.turn_on
          data:
            entity_id: switch.mj_s01_switch_03_red_led

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO5
      #mode: INPUT_PULLUP
      #inverted: True
    name: "Button"
    # on_press:
    #   then:
    #     - light.toggle: light_1
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.5s
        then:
          - logger.log: "Single Short Clicked"
          - light.toggle: light_1
      - timing:
          - ON for 1s to 2s
          - OFF for at least 0.5s
        then:
          - logger.log: "Single Long Clicked"
          - homeassistant.service:
              service: homeassistant.turn_off
              data:
                entity_id: light.mj_sd01_dimmer_01 # Steampunk Lamp
      - timing:
          - ON for at most 1s
          - OFF for at most 1s
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - logger.log: "Double Clicked"
          # - homeassistant.service:
          #     service: homeassistant.turn_off
          #     data:
          #       entity_id: light.mj_sd01_dimmer_01

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s

text_sensor:
  - platform: version
    name: "ESPHome Version"