# https://devices.esphome.io/devices/Zemismart-Switch-TB22

substitutions:
  device_name: zemismart_ks_811
  friendly_name: "Zemismart KS-811"

  switch_restore_mode: ALWAYS_OFF
  switch1_name: "Middle Lights"
  switch2_name: "Side Lights"
  switch3_name: "Gas Lights"

esphome:
  name: ${device_name}
  name_add_mac_suffix: false
  friendly_name: ${friendly_name}

esp8266:
  board: esp01_1m

logger:
  # https://esphome.io/components/logger

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

# Enable over the air update with password
ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} AP"
    password: !secret ap_password

captive_portal:

web_server:
  # https://esphome.io/components/web_server.html

text_sensor:
  - platform: version
    name: "ESPHome Version"

sensor:
  # Devices WiFi Signal and Uptime  
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s

binary_sensor:
  - platform: homeassistant
    entity_id: light.shelly_25_02_light_1 # "Middle Lights"
    id: shelly_25_02_light_1_state
  - platform: homeassistant
    entity_id: light.shelly_25_02_light_2 # Side Lights
    id: shelly_25_02_light_2_state
  - platform: homeassistant
    entity_id: light.shelly_1_01_light # Gas Lights
    id: shelly_1_01_light_state

  - platform: gpio
    id: button1
    pin:
      number: GPIO16
      inverted: true
    on_click:
      - switch.toggle: relay1
      - logger.log: "Button 1 pressed - Toggling Middle Lights"

  - platform: gpio
    id: button2
    pin:
      number: GPIO5
      inverted: true
      mode: INPUT_PULLUP
    on_click:
      - switch.toggle: relay2
      - logger.log: "Button 2 pressed - Toggling Side Lights"

  - platform: gpio
    id: button3
    pin:
      number: GPIO4
      inverted: true
      mode: INPUT_PULLUP
    on_click:
      - switch.toggle: relay3
      - logger.log: "Button 3 pressed - Toggling Gas Lights"
      
switch:
  - platform: gpio
    name: ${switch1_name}  # Middle Lights
    pin: GPIO13
    id: relay1
    restore_mode: ${switch_restore_mode}
    on_turn_on: 
      then:
        - if:
            condition:
              lambda: 'return id(shelly_25_02_light_1_state).state = "off";'  # "off"
            then:
              - homeassistant.service:
                  service: light.turn_on
                  data:
                    entity_id: light.shelly_25_02_light_1
    on_turn_off:
      then:
        - if:
            condition:
              lambda: 'return id(shelly_25_02_light_1_state).state = "on";'  # "on"
            then:
              - homeassistant.service:
                  service: light.turn_off
                  data:
                    entity_id: light.shelly_25_02_light_1


  - platform: gpio
    name: ${switch2_name} # Side Lights
    pin: GPIO12
    id: relay2
    restore_mode: ${switch_restore_mode}
    on_turn_on: 
      then:
        - if:
            condition:
              lambda: 'return id(shelly_25_02_light_2_state).state = "off";'  # "off"
            then:
              - homeassistant.service:
                  service: light.turn_on
                  data:
                    entity_id: light.shelly_25_02_light_2
    on_turn_off:
      then:
        - if:
            condition:
              lambda: 'return id(shelly_25_02_light_2_state).state = "on";'  # "on"
            then:
              - homeassistant.service:
                  service: light.turn_off
                  data:
                    entity_id: light.shelly_25_02_light_2

  - platform: gpio
    name: ${switch3_name} # Gas Lights
    pin: GPIO14
    id: relay3
    restore_mode: ${switch_restore_mode}
    on_turn_on: 
      then:
        - if:
            condition:
              lambda: 'return id(shelly_1_01_light_state).state = "off";'  # "off"
            then:
              - homeassistant.service:
                  service: light.turn_on
                  data:
                    entity_id: light.shelly_1_01_light
    on_turn_off: 
      then:  
        - if:
            condition:
              lambda: 'return id(shelly_1_01_light_state).state = "on";'  # "on"
            then:
              - homeassistant.service:
                  service: light.turn_off
                  data:
                    entity_id: light.shelly_1_01_light


light:
  - platform: status_led
    id: led_green
    name: Backlight
    restore_mode: ALWAYS_ON
    entity_category: config
    pin:
      number: GPIO0
      inverted: true