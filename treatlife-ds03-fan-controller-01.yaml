substitutions:
  name: treatlife-ds03-01
  friendly_name: TreatLife DS03 01

esphome:
  name: ${name}
  name_add_mac_suffix: false
  friendly_name: ${friendly_name}
  on_boot:
    priority: 0
    then:
      - delay: 3s
      - lambda: |-
          if (id(speed_fan).state) {
            ESP_LOGI("boot", "Fan restored ON, speed=%d", id(speed_fan).speed);
          } else {
            ESP_LOGI("boot", "Fan restored OFF");
          }

esp8266:
  board: esp01_1m
  
logger:
  baud_rate: 0

web_server:

captive_portal:

mdns:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

# Enable over the air update with password
ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} AP"
    password: !secret ap_password

time:
  - platform: homeassistant
    id: homeassistant_time

uart:
  rx_pin: GPIO3
  tx_pin: GPIO1
  baud_rate: 115200

tuya:
  time_id: homeassistant_time # This links the Tuya component to the time component   

debug:
  update_interval: 30s

text_sensor:
  - platform: debug
    reset_reason:
      name: "Reset Reason"

sensor:
  - platform: wifi_signal
    name: "Wifi Signal"
    update_interval: 60s

button:
  - platform: restart
    name: Restart

light:
  - platform: "tuya"
    name: "Light"
    dimmer_datapoint: 10
    switch_datapoint: 9
    min_value: 100
    max_value: 1000

fan:
  - platform: "tuya"
    name: "Speed"
    id: speed_fan
    restore_mode: RESTORE_DEFAULT_ON
    switch_datapoint: 1
    speed_datapoint: 3
    speed_count: 4
